## Set prefix
unbind C-b
set -g prefix C-s

bind c neww -c "#{pane_current_path}"
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c $PWD

## Smart pane switching with awareness of Vim splits.
### See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#    ## Pane resize
bind j resize-pane -D 10
bind k resize-pane -U 10
bind l resize-pane -L 10
bind h resize-pane -R 10

set-option -g status-left-length 100

set-option -g status-right " #(battery -t -e)   #(date '+%a, %b %d - %I:%M') "

##clipboard fix
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

## Scrollback
set-option -g history-limit 10000

## Use vi keys in window
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection
bind-key -T copy-mode-vi 'Y' send-keys -X copy-end-of-line
bind-key -T copy-mode-vi 'V' send-keys -X select-line
